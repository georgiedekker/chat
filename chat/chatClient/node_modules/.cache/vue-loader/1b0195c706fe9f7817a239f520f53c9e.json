{"remainingRequest":"/Users/georgedekker/Movies/dev/chat/client/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/georgedekker/Movies/dev/chat/client/src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css","dependencies":[{"path":"/Users/georgedekker/Movies/dev/chat/client/src/App.vue","mtime":1628513663577},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICAgIGJvZHkgeyBtYXJnaW46IDByZW07IHBhZGRpbmctYm90dG9tOiAzcmVtOyBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAiU2Vnb2UgVUkiLCBSb2JvdG8sIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7IH0KCiAgICAgIGZvcm0geyBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMTUpOyBwYWRkaW5nOiAwLjI1cmVtOyBwb3NpdGlvbjogZml4ZWQ7IGJvdHRvbTogMDsgbGVmdDogMDsgcmlnaHQ6IDA7IGRpc3BsYXk6IGZsZXg7IGhlaWdodDogM3JlbTsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpOyB9CiAgICAgIGlucHV0IHsgYm9yZGVyOiBub25lOyBwYWRkaW5nOiAwIDFyZW07IGZsZXgtZ3JvdzogMTsgYm9yZGVyLXJhZGl1czogM3JlbTsgbWFyZ2luOiAwLjI1cmVtOyB9IAogICAgICBpbnB1dDpmb2N1cyB7IG91dGxpbmU6IG5vbmU7IH0KICAgICAgZm9ybSA+IGJ1dHRvbiB7IGJhY2tncm91bmQ6ICMzMzM7IGJvcmRlcjogbm9uZTsgcGFkZGluZzogMCAxcmVtOyBtYXJnaW46IDAuMjVyZW07IGJvcmRlci1yYWRpdXM6IDNweDsgb3V0bGluZTogbm9uZTsgY29sb3I6ICNmZmY7IH0KCiAgICAgIHVsIHsgbGlzdC1zdHlsZS10eXBlOiBub25lOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IH0KICAgICAgdWwgPiBsaSB7IHBhZGRpbmc6IDAuMjVyZW0gMXJlbTsgfQogICAgICB1bCA+IGxpOm50aC1jaGlsZChvZGQpIHsgYmFja2dyb3VuZDogI2VmZWZlZjsgfQogICAgICAvKiB1bCA+IGxpOm50aC1sYXN0LWNoaWxkKDEpOmZvY3VzIHsgb3V0bGluZTpub25lO30gKi8KICAgIA=="},{"version":3,"sources":["/Users/georgedekker/Movies/dev/chat/client/src/App.vue"],"names":[],"mappings":";MAilI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MACnD,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;MACjC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MAC9C,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC","file":"/Users/georgedekker/Movies/dev/chat/client/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n       \n        <form>\n          <label for=\"chat\">Message</label>\n          <!-- <input id=\"userName\" type=\"text\" autocomplete=\"off\" v-model=\"userName\"/> -->\n          <input id=\"chatMessage\" type=\"text\" autocomplete=\"off\" v-model=\"chatMessage\"/>\n          <button v-on:click.prevent=\"submit(chatMessage, userName)\">Send</button>\n        </form>\n         <ul id=\"messages\">\n          <li v-for=\"(message, index) in messages\" :key=\"index\">\n            <!-- {{index }} index {{ message.message }} from {{message.user.name}} on {{moment(message.user.timeStamp).format('HH:mm:ss')}} -->\n              <p> {{ message.message }} <br/>\n              <sub>{{ message.user.name}} at {{moment(message.user.timeStamp).format('HH:mm:ss')}} </sub></p>\n              <p v-if=\"index==messages.length-1\"  id=\"indexLast\">User name is: {{ userName }}</p>\n          </li>\n        </ul>\n        <br />\n<p> room: {{ room }} </p>\n  <!-- <p>Message is: {{ messages }}</p> -->\n  <p id=\"indexs\">User name is: {{ userName }}</p>\n<br />\n  <!-- <p>Store: {{ JSON.stringify(store) }}</p> -->\n \n</template>\n\n<script>\nimport { reactive, ref } from 'vue';\n// import ChatInput from './components/ChatInput.vue';\n// import AppBar from './components/AppBar.vue'\n// import Chats from './components/Chats.vue'\nimport moment from 'moment';\nimport { io } from 'socket.io-client';\n\nlet room = ref('');\nlet messages = reactive([]);\nlet user = {name:'someName'+Math.random()*1000}\nlet userName = user.name\nlet socket = io(process.env.VUE_APP_SOCKET_ENDPOINT, {\n                auth: {\n                token: 'abc',\n                name: 'start'\n                }\n                \n  });\n\n\n  socket.emit('new-user', userName, 'start');\n   socket.on('user-connected',  usr => {\n    console.log('usr: '+usr)\n    // store.user = usr});\n   });\n    socket.on('connection-success', userFromServer =>{\n    console.log('user from server: '+JSON.stringify(userFromServer))\n    // store.user.name= userFromServer});\n    socket.emit('new-user', user);\n    })\n    socket.on('messages', mssages =>{\n     console.log('messages received: '+mssages.result.length)\n     let i = 0\n    const el = document.getElementById('indexs');\n      \n     for(i=0; i<mssages.result.length;i++){\n      if (el) {\n       console.log('message i: '+mssages.result[i].user.timeStamp)\n       document.getElementById('indexs').scrollIntoView({behavior:'smooth'})\n       messages.push(mssages.result[i])\n      //  document.getElementById('messages').lastChild.scrollIntoView({behavior:'smooth'})\n      //  document.getElementById('indexLast').scrollIntoView({behavior:'smooth'})\n       document.getElementById('chatMessage').focus()\n     }}\n    //  messages.push(...mssages.result)\n     \n    //  document.getElementById('indexs').focus()\n    //   document.getElementById('chatMessage').focus()\n    //   document.getElementById('indexs').scrollIntoView({behavior:'smooth'})\n   })\n     socket.on('chat-message', received => {\n      console.log('received chatInput: '+JSON.stringify(received))\n    //  let messages = []\n    console.log('received.user.name: '+received.user.name+ ' userName: '+userName)\n    if(received.user.name==userName){\n      received.user.name='you'\n    }\n    if(received.message=='received your message'){\n      return\n    }\n     messages.push(received)\n     console.log(messages.length)\n     \n    const el = document.getElementById('indexs');\n      if (el) {\n        el.scrollIntoView({behavior: 'smooth'});\n        el.scrollIntoView({behavior: 'smooth'});\n      }\n      \n     return messages\n     \n      })\n  \nexport default {\n  name:'App',\n  store:{},\n  socket:socket,\n  user:user,\n  messages:messages,\n  room:'',\n  created: function () {\n    this.moment = moment;\n    fetch(\"http://localhost:3010/room/\")\n  .then(function(response) {\n    return response.text();\n  })\n  .then(function(data) {\n    console.log(data);\n    room = data\n    console.log(room)\n    return room.value\n  });\n  },\n  data() {\n    return{\n    store:{},\n    user:user,\n    room:'',\n    userName:userName,\n    socket:{},\n    message:{},\n    chatMessage:'',\n    messages:messages,\n  }},\n  methods: {\n   \n    submit (chatMessage,userName){ \n   console.log(chatMessage+' '+userName)\n   socket.emit('send-chat-message',chatMessage, {name:userName})\n      // user.name = user\n      \n       this.chatMessage = '';\n      document.getElementById('chatMessage').focus()\n  },\n  //  \n  // document.addEventListener(\"DOMContentLoaded\", function(){\n  //  console.log('DOMContentLoaded')\n      // document.getElementById('indexs').scrollIntoView({behavior:'smooth'})\n      // })\n//   document.getElementById('chatMessage').focus()\n//  const el = document.getElementById('indexs');\n//       if (el) {\n//         el.scrollIntoView({behavior: 'smooth'});\n//         el.scrollIntoView({behavior: 'smooth'});\n//       }\n     \n// },\nunmounted(){\nsocket.disconnect()\n},\n}\n}\n\n</script>\n<style>\n      body { margin: 0rem; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif; }\n\n      form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }\n      input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 3rem; margin: 0.25rem; } \n      input:focus { outline: none; }\n      form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }\n\n      ul { list-style-type: none; margin: 0; padding: 0; }\n      ul > li { padding: 0.25rem 1rem; }\n      ul > li:nth-child(odd) { background: #efefef; }\n      /* ul > li:nth-last-child(1):focus { outline:none;} */\n    </style>"]}]}