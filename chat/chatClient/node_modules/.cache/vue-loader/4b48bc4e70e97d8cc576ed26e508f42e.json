{"remainingRequest":"/Users/georgedekker/Movies/dev/chat/client/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/georgedekker/Movies/dev/chat/client/src/App.vue?vue&type=template&id=7ba5bd90","dependencies":[{"path":"/Users/georgedekker/Movies/dev/chat/client/src/App.vue","mtime":1628342050969},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:PGZvcm0+CiAgICAgICAgICA8bGFiZWwgZm9yPSJjaGF0Ij5DaGF0IE1lc3NhZ2U8L2xhYmVsPgogICAgICAgICAgPGlucHV0IGlkPSJ1c2VyTmFtZSIgdHlwZT0idGV4dCIgYXV0b2NvbXBsZXRlPSJvZmYiIHYtbW9kZWw9InVzZXJuYW1lIi8+CiAgICAgICAgICA8aW5wdXQgaWQ9ImNoYXRNZXNzYWdlIiB0eXBlPSJ0ZXh0IiBhdXRvY29tcGxldGU9Im9mZiIgdi1tb2RlbD0iY2hhdE1lc3NhZ2UiLz4KICAgICAgICAgIDxidXR0b24gdi1vbjpjbGljay5wcmV2ZW50PSJzdWJtaXQoY2hhdE1lc3NhZ2UsIHVzZXJuYW1lKSI+U2VuZDwvYnV0dG9uPgogICAgICAgIDwvZm9ybT4KICAgICAgICAgPHVsPgogICAgICAgICAgPGxpIHYtZm9yPSIobWVzc2FnZSwgaW5kZXgpIGluIG1lc3NhZ2VzIiA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgIDwhLS0ge3tpbmRleCB9fSBpbmRleCB7eyBtZXNzYWdlLm1lc3NhZ2UgfX0gZnJvbSB7e21lc3NhZ2UudXNlci5uYW1lfX0gb24ge3ttb21lbnQobWVzc2FnZS51c2VyLnRpbWVTdGFtcCkuZm9ybWF0KCdISDptbTpzcycpfX0gLS0+CiAgICAgICAgICAgICAgPHA+IHt7IG1lc3NhZ2UubWVzc2FnZSB9fSA8YnIvPgogICAgICAgICAgICAgIDxzdWI+e3sgbWVzc2FnZS51c2VyLm5hbWV9fSBhdCB7e21vbWVudChtZXNzYWdlLnVzZXIudGltZVN0YW1wKS5mb3JtYXQoJ0hIOm1tOnNzJyl9fSA8L3N1Yj48L3A+CiAgICAgICAgICA8L2xpPgogICAgICAgIDwvdWw+CiAgICAgICAgPGJyIC8+CgogIDwhLS0gPHA+TWVzc2FnZSBpczoge3sgbWVzc2FnZXMgfX08L3A+IC0tPgogIDxwIGlkPSJpbmRleCI+VXNlciBuYW1lIGlzOiB7eyB1c2VybmFtZSB9fTwvcD4KPGJyIC8+CiAgPCEtLSA8cD5TdG9yZToge3sgSlNPTi5zdHJpbmdpZnkoc3RvcmUpIH19PC9wPiAtLT4="},{"version":3,"sources":["/Users/georgedekker/Movies/dev/chat/client/src/App.vue"],"names":[],"mappings":"AAEA,CAAC,CAAC,CAAC,CAAC,CAAC;UACK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACrC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACvzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACL,CAAC,CAAC,CAAC;UACF,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACncAChI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAClG,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,EAAE,CAAC;;EAEX,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACzC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,EAAE,CAAC;EACH,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC","file":"/Users/georgedekker/Movies/dev/chat/client/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n       \n        <form>\n          <label for=\"chat\">Chat Message</label>\n          <input id=\"userName\" type=\"text\" autocomplete=\"off\" v-model=\"username\"/>\n          <input id=\"chatMessage\" type=\"text\" autocomplete=\"off\" v-model=\"chatMessage\"/>\n          <button v-on:click.prevent=\"submit(chatMessage, username)\">Send</button>\n        </form>\n         <ul>\n          <li v-for=\"(message, index) in messages\" :key=\"index\">\n            <!-- {{index }} index {{ message.message }} from {{message.user.name}} on {{moment(message.user.timeStamp).format('HH:mm:ss')}} -->\n              <p> {{ message.message }} <br/>\n              <sub>{{ message.user.name}} at {{moment(message.user.timeStamp).format('HH:mm:ss')}} </sub></p>\n          </li>\n        </ul>\n        <br />\n\n  <!-- <p>Message is: {{ messages }}</p> -->\n  <p id=\"index\">User name is: {{ username }}</p>\n<br />\n  <!-- <p>Store: {{ JSON.stringify(store) }}</p> -->\n \n</template>\n\n<script>\nimport { reactive } from 'vue';\n// import ChatInput from './components/ChatInput.vue';\n// import AppBar from './components/AppBar.vue'\n// import Chats from './components/Chats.vue'\nimport moment from 'moment';\nimport { io } from 'socket.io-client';\n\nlet messages = reactive([]);\nlet user = {name:'some name'+Math.random()*1000}\nlet username = user.name\nlet socket = io(process.env.VUE_APP_SOCKET_ENDPOINT, {\n                auth: {\n                token: 'abc',\n                name: 'start'\n                }\n                \n  });\n   socket.on('user-connected',  usr => {\n    console.log('usr: '+usr)\n    // store.user = usr});\n   });\n    socket.on('connection-success', userFromServer =>{\n    console.log('user from server: '+JSON.stringify(userFromServer))\n    // store.user.name= userFromServer});\n    socket.emit('new-user', user);\n   \n    // console.log('store: '+JSON.stringify(store))\n    // let user = store.user\n    // return socket, store, user\n    })\n     socket.on('chat-message', received => {\n      console.log('received chatInput: '+JSON.stringify(received))\n    //  let messages = []\n    console.log('received.user.name: '+received.user.name+ ' username: '+username)\n    if(received.user.name==username){\n      received.user.name='you'\n    }\n    if(received.message=='received your message'){\n      return\n    }\n     messages.push(received)\n     console.log(messages.length)\n     const el = document.getElementById('index');\n      if (el) {\n        el.scrollIntoView();\n        el.scrollIntoView();\n      }\n     return messages\n      })\n \nexport default {\n  name:'App',\n  store:{},\n  socket:socket,\n  user:user,\n  messages:messages,\n    // store:{},\n  // moment:moment,\n  // user: this.store.user,\n  // store:{},\n  created: function () {\n    this.moment = moment;\n    fetch('http://localhost:3000')      \n    .then( response => response.json())\n    .then(data => console.log(data))\n  },\n  data() {\n    return{\n    store:{},\n    user:user,\n    username:username,\n    socket:{},\n    message:{},\n    chatMessage:'',\n    messages:messages,\n  }},\n  methods: {\n    submit (chatMessage,username){ \n   console.log(chatMessage+' '+username)\n   socket.emit('send-chat-message',chatMessage, {name:username})\n      // user.name = user\n      \n       this.chatMessage = '';\n      document.getElementById('chatMessage').focus()\n  },\nmounted(){\n \n},\nunmounted(){\nsocket.disconnect()\n},\n}\n}\n\n</script>\n<style>\n      body { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif; }\n\n      form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }\n      input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }\n      input:focus { outline: none; }\n      form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }\n\n      ul { list-style-type: none; margin: 0; padding: 0; }\n      ul > li { padding: 0.5rem 1rem; }\n      ul > li:nth-child(odd) { background: #efefef; }\n    </style>"]}]}