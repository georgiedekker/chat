{"remainingRequest":"/Users/georgedekker/Movies/dev/chat/client/node_modules/babel-loader/lib/index.js!/Users/georgedekker/Movies/dev/chat/client/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/georgedekker/Movies/dev/chat/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/georgedekker/Movies/dev/chat/client/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/georgedekker/Movies/dev/chat/client/src/components/ChatInput.vue?vue&type=template&id=2a312a52","dependencies":[{"path":"/Users/georgedekker/Movies/dev/chat/client/src/components/ChatInput.vue","mtime":1628113021810},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/georgedekker/Movies/dev/chat/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCB3aXRoTW9kaWZpZXJzIGFzIF93aXRoTW9kaWZpZXJzIH0gZnJvbSAidnVlIjsKCnZhciBfaG9pc3RlZF8xID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgibGFiZWwiLCB7CiAgZm9yOiAiY2hhdE1lc3NhZ2UiCn0sICJDaGF0IE1lc3NhZ2UiLCAtMQovKiBIT0lTVEVEICovCik7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfdGhpcyA9IHRoaXM7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlVk5vZGUoInVsIiwgbnVsbCwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkZGF0YS5tZXNzYWdlcywgZnVuY3Rpb24gKG1lc3NhZ2UsIGluZGV4KSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImxpIiwgewogICAgICBrZXk6IGluZGV4CiAgICB9LCBfdG9EaXNwbGF5U3RyaW5nKG1lc3NhZ2UubWVzc2FnZSkgKyAiIGZyb20gIiArIF90b0Rpc3BsYXlTdHJpbmcobWVzc2FnZS51c2VyLm5hbWUpICsgIiBvbiAiICsgX3RvRGlzcGxheVN0cmluZygpLCAxCiAgICAvKiBURVhUICovCiAgICApOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSksIF9jcmVhdGVWTm9kZSgiZm9ybSIsIG51bGwsIFtfaG9pc3RlZF8xLCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZVZOb2RlKCJpbnB1dCIsIHsKICAgIGlkOiAidXNlck5hbWUiLAogICAgdHlwZTogInRleHQiLAogICAgYXV0b2NvbXBsZXRlOiAib2ZmIiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiBfdGhpcy51c2VyLm5hbWUgPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192TW9kZWxUZXh0LCB0aGlzLnVzZXIubmFtZV1dKSwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgiaW5wdXQiLCB7CiAgICBpZDogImNoYXRNZXNzYWdlIiwKICAgIHR5cGU6ICJ0ZXh0IiwKICAgIGF1dG9jb21wbGV0ZTogIm9mZiIsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gX3RoaXMuY2hhdE1lc3NhZ2UgPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192TW9kZWxUZXh0LCB0aGlzLmNoYXRNZXNzYWdlXV0pLCBfY3JlYXRlVk5vZGUoImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6IF9jYWNoZVszXSB8fCAoX2NhY2hlWzNdID0gX3dpdGhNb2RpZmllcnMoZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuc3VibWl0KCRkYXRhLmNoYXRNZXNzYWdlLCBfdGhpcy51c2VyKTsKICAgIH0sIFsic3RvcCIsICJwcmV2ZW50Il0pKQogIH0sICJTZW5kIildKSwgX2NyZWF0ZVZOb2RlKCJwIiwgbnVsbCwgIk1lc3NhZ2UgaXM6ICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLm1lc3NhZ2UpLCAxCiAgLyogVEVYVCAqLwogICksIF9jcmVhdGVWTm9kZSgicCIsIG51bGwsICJVc2VyIG5hbWUgaXM6ICIgKyBfdG9EaXNwbGF5U3RyaW5nKHRoaXMudXNlci5uYW1lKSwgMQogIC8qIFRFWFQgKi8KICApXSwgNjQKICAvKiBTVEFCTEVfRlJBR01FTlQgKi8KICApOwp9"},{"version":3,"sources":["/Users/georgedekker/Movies/dev/chat/client/src/components/ChatInput.vue"],"names":[],"mappings":";;;8BAKU,YAAA,CAA6C,OAA7C,EAA6C;AAAtC,EAAA,GAAG,EAAC;AAAkC,CAA7C,EAAyB,cAAzB,EAAqC,CAAA;AAAA;AAArC,C;;;;;sDAJF,YAAA,CAEK,IAFL,EAEK,IAFL,EAEK,E,kBADH,YAAA,CAAmH,SAAnH,EAAmH,IAAnH,EAAmH,WAAA,CAApF,KAAA,CAAA,QAAoF,EAA5E,UAA3B,OAA2B,EAAlB,KAAkB,EAAb;yBAA1B,YAAA,CAAmH,IAAnH,EAAmH;AAAzE,MAAA,GAAG,EAAE;AAAoE,KAAnH,EAAoD,gBAAA,CAAK,OAAO,CAAC,OAAb,CAAA,GAAuB,QAAvB,GAA6B,gBAAA,CAAE,OAAO,CAAC,IAAR,CAAa,IAAf,CAA7B,GAAkD,MAAlD,GAAsD,gBAAA,EAA1G,EAA4G;AAAA;AAA5G,K;GAAmH,CAAnH,E;;AAAA,GACG,EAFL,C,EAGA,YAAA,CAKO,MALP,EAKO,IALP,EAKO,CAJL,UAIK,E,gBAHL,YAAA,CAA8E,OAA9E,EAA8E;AAAvE,IAAA,EAAE,EAAC,UAAoE;AAAzD,IAAA,IAAI,EAAC,MAAoD;AAA7C,IAAA,YAAY,EAAC,KAAgC;;mBAAZ,I,CAAK,I,GAAI,M;;AAAG,GAA9E,E,IAAA,E;;AAAA,G,sBAAkE,I,CAAK,I,GAGlE,E,gBAFL,YAAA,CAAmF,OAAnF,EAAmF;AAA5E,IAAA,EAAE,EAAC,aAAyE;AAA3D,IAAA,IAAI,EAAC,MAAsD;AAA/C,IAAA,YAAY,EAAC,KAAkC;;mBAAd,W,GAAW,M;;AAAG,GAAnF,E,IAAA,E;;AAAA,G,sBAAqE,W,GAEhE,EADL,YAAA,CAA8E,QAA9E,EAA8E;AAAjE,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA,UAAA,MAAA;AAAA,aAAe,QAAA,CAAA,MAAA,CAAO,KAAA,CAAA,WAAP,EAAkB,KAAA,CAAO,IAAzB,CAAf;AAAA,KAAA,EAA4C,CAAA,MAAA,EAAA,SAAA,CAA5C,CAAA;AAA4D,GAA9E,EAAiE,MAAjE,CACK,CALP,C,EAON,YAAA,CAAgC,GAAhC,EAAgC,IAAhC,EAAG,iBAAY,gBAAA,CAAG,KAAA,CAAA,OAAH,CAAf,EAAyB;AAAA;AAAzB,G,EACA,YAAA,CAAyC,GAAzC,EAAyC,IAAzC,EAAG,mBAAc,gBAAA,CAAA,KAAQ,IAAR,CAAa,IAAb,CAAjB,EAAkC;AAAA;AAAlC,G","sourcesContent":["<template>\n        <ul>\n          <li v-for=\"(message, index) in messages\" :key=\"index\">{{ message.message }} from {{message.user.name}} on {{}}</li>\n        </ul>\n        <form>\n          <label for=\"chatMessage\">Chat Message</label>\n          <input id=\"userName\" type=\"text\" autocomplete=\"off\" v-model=\"this.user.name\"/>\n          <input id=\"chatMessage\" type=\"text\" autocomplete=\"off\" v-model=\"this.chatMessage\"/>\n          <button v-on:click.stop.prevent=\"submit(chatMessage, this.user)\">Send</button>\n        </form>\n\n  <p>Message is: {{ message }}</p>\n  <p>User name is: {{ this.user.name }}</p>\n \n</template>\n\n<script>\n// import { Socket } from 'socket.io-client';\nimport SocketioService from '../../services/socketio.service';\n// console.log('user from SocketioService: '+JSON.stringify(SocketioService.user))\nexport default {\n  name: 'ChatInput',\n  \n  data()  {\n    return { \n      chatMessage:'',\n      room: Math.floor(Math.random()*1000),\n      userName:'',\n      user: SocketioService.user,\n      message:'',\n      messages:[]\n    }\n  //   // return this.chatMessage\n  },\n  methods:{\n    // created(){\n    // const user = SocketioService.socketCreated()\n    // return user},\n    // unmounted(){\n    // SocketioService.disconnect()\n    // },\n    submit (chatMessage,user){ \n      // console.log('received message: '+chatMessage+' user: '+user.name+user.timeStamp)\n      // this.user = SocketioService.user\n      this.user.name = user.name\n      const received = SocketioService.sendMessage(chatMessage, this.user)\n      console.log('received chatInput: '+JSON.stringify(received))\n      // this.messageChat = await SocketioService.sendMessage(chatMessage, this.user)\n      // console.log('user that was sent: '+JSON.stringify(this.user))\n      // console.log('message: '+JSON.stringify(this.messageChat.message))\n      this.user = received.user\n      this.message = received.message;\n      // this.messages = [];\n      this.messages.push({message:this.message, user:this.user});\n      // console.log('messageChat: '+JSON.stringify(this.messageChat))\n      // console.log('user from SocketioService: '+JSON.stringify(SocketioService.user))\n      \n      // this.user = messageChat.user.timeStamp\n      // return this.messages, this.user\n\n      // console.log('messages: '+this.messageChat)\n      // if(messageChat?.message){\n        // chatMessage = messageChat\n      // }\n      // return  chatMessage\n      // }\n      this.chatMessage = '';\n      document.getElementById('chatMessage').focus()\n      // this.messages.push(this.messageChat)\n      // return {message:message, messages:messages}\n      }\n    // receiveMessage:((chatMessage)=>{socketioService.receiveMessage(chatMessage);console.log('message: '+chatMessage)},'')\n  }\n}\n</script>\n"],"sourceRoot":""}]}